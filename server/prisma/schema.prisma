// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(cuid())
  role       Role         @default(USER)
  firstName  String
  lastName   String
  age        Int
  email      String       @unique
  password   String
  reviews    Review[]
  likes      Like[]
  watchLater WatchLater[]
  avatarPath String?
  
  // watchLater Movie[]  @relation("watchLater")
  // viewed     Movie[]  @relation("viewed")
}

model Movie {
  id          String       @id @default(cuid())
  posterPath  String
  moviePath   String
  title       String
  description String
  postedAt    DateTime     @default(now())
  likes       Like[]
  Review      Review[]
  watchLater  WatchLater[]
}

model WatchLater {
  id      String @id @default(cuid())
  user    User   @relation(fields: [userId], references: [id])
  userId  String
  movie   Movie  @relation(fields: [movieId], references: [id])
  movieId String
  
  @@unique([userId, movieId])
}

// model View {
//   id String @id @default(cuid())
//   user    User   @relation(fields: [userId], references: [id])
//   userId  String
//   movie   Movie  @relation(fields: [movieId], references: [id])
//   movieId String
// }

model Like {
  id      String @id @default(cuid())
  user    User   @relation(fields: [userId], references: [id])
  userId  String
  movie   Movie  @relation(fields: [movieId], references: [id])
  movieId String

  @@unique([userId, movieId])
}

model Review {
  id        String   @id @default(cuid())
  posted_at DateTime @default(now())
  text      String
  Movie     Movie    @relation(fields: [movieId], references: [id])
  movieId   String
  User      User     @relation(fields: [userId], references: [id])
  userId    String
}

enum Role {
  USER
  ADMIN
}
